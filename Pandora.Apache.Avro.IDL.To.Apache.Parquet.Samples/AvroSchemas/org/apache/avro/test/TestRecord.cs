// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace org.apache.avro.test
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// A TestRecord.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class TestRecord : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"TestRecord\",\"doc\":\"A TestRecord.\",\"namespace\":\"org.apach" +
				"e.avro.test\",\"fields\":[{\"name\":\"name\",\"doc\":\"Tests that keywords can also appear" +
				" in identifiers.\",\"default\":\"foo\",\"type\":\"string\"},{\"name\":\"kind\",\"doc\":\"The kin" +
				"d of record.\",\"type\":{\"type\":\"enum\",\"name\":\"Kind\",\"doc\":\"A kind of record.\",\"nam" +
				"espace\":\"org.apache.avro.test\",\"aliases\":[\"org.foo.KindOf\"],\"symbols\":[\"FOO\",\"BA" +
				"R\",\"BAZ\"]}},{\"name\":\"status\",\"doc\":\"The status of the record.\",\"default\":\"A\",\"ty" +
				"pe\":{\"type\":\"enum\",\"name\":\"Status\",\"namespace\":\"org.apache.avro.test\",\"symbols\":" +
				"[\"A\",\"B\",\"C\"],\"default\":\"C\"}},{\"name\":\"hash\",\"default\":\"0000000000000000\",\"type\"" +
				":{\"type\":\"fixed\",\"name\":\"MD5\",\"doc\":\"An MD5 hash.\",\"namespace\":\"org.apache.avro." +
				"test\",\"size\":16}},{\"name\":\"nullableHash\",\"doc\":\"A traditional optional field\",\"d" +
				"efault\":null,\"type\":[\"null\",\"MD5\"],\"aliases\":[\"hash_\",\"hsh\"]},{\"name\":\"value\",\"d" +
				"oc\":\"These two fields parse correctly, but will brewak (be\\nchanged to strings) " +
				"when serializing the protocol/schema as\\nJSON.\",\"type\":\"double\"},{\"name\":\"averag" +
				"e\",\"doc\":\"These two fields parse correctly, but will brewak (be\\nchanged to stri" +
				"ngs) when serializing the protocol/schema as\\nJSON.\",\"type\":\"float\"},{\"name\":\"t\"" +
				",\"default\":0,\"type\":[{\"type\":\"int\",\"logicalType\":\"time-millis\"},\"null\"]},{\"name\"" +
				":\"l\",\"default\":0,\"type\":{\"type\":\"long\",\"foo.bar\":\"bar.foo\"}},{\"name\":\"a\",\"doc\":\"" +
				"Arrays (and maps) may also have properties\",\"default\":[],\"type\":{\"type\":\"array\"," +
				"\"items\":\"string\",\"foo.bar.bar\":\"foo.bar2\"}},{\"name\":\"prop\",\"default\":null,\"type\"" +
				":[\"null\",\"string\"]}],\"my-property\":{\"key\":3}}");
		/// <summary>
		/// Tests that keywords can also appear in identifiers.
		/// </summary>
		private string _name;
		/// <summary>
		/// The kind of record.
		/// </summary>
		private org.apache.avro.test.Kind _kind;
		/// <summary>
		/// The status of the record.
		/// </summary>
		private org.apache.avro.test.Status _status = org.apache.avro.test.Status.C;
		private org.apache.avro.test.MD5 _hash;
		/// <summary>
		/// A traditional optional field
		/// </summary>
		private org.apache.avro.test.MD5 _nullableHash;
		/// <summary>
		/// These two fields parse correctly, but will brewak (be
		///changed to strings) when serializing the protocol/schema as
		///JSON.
		/// </summary>
		private double _value;
		/// <summary>
		/// These two fields parse correctly, but will brewak (be
		///changed to strings) when serializing the protocol/schema as
		///JSON.
		/// </summary>
		private float _average;
		private System.Nullable<System.TimeSpan> _t;
		private long _l;
		/// <summary>
		/// Arrays (and maps) may also have properties
		/// </summary>
		private IList<System.String> _a;
		private string _prop;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return TestRecord._SCHEMA;
			}
		}
		/// <summary>
		/// Tests that keywords can also appear in identifiers.
		/// </summary>
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		/// <summary>
		/// The kind of record.
		/// </summary>
		public org.apache.avro.test.Kind kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				this._kind = value;
			}
		}
		/// <summary>
		/// The status of the record.
		/// </summary>
		public org.apache.avro.test.Status status
		{
			get
			{
				return this._status;
			}
			set
			{
				this._status = value;
			}
		}
		public org.apache.avro.test.MD5 hash
		{
			get
			{
				return this._hash;
			}
			set
			{
				this._hash = value;
			}
		}
		/// <summary>
		/// A traditional optional field
		/// </summary>
		public org.apache.avro.test.MD5 nullableHash
		{
			get
			{
				return this._nullableHash;
			}
			set
			{
				this._nullableHash = value;
			}
		}
		/// <summary>
		/// These two fields parse correctly, but will brewak (be
		///changed to strings) when serializing the protocol/schema as
		///JSON.
		/// </summary>
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				this._value = value;
			}
		}
		/// <summary>
		/// These two fields parse correctly, but will brewak (be
		///changed to strings) when serializing the protocol/schema as
		///JSON.
		/// </summary>
		public float average
		{
			get
			{
				return this._average;
			}
			set
			{
				this._average = value;
			}
		}
		public System.Nullable<System.TimeSpan> t
		{
			get
			{
				return this._t;
			}
			set
			{
				this._t = value;
			}
		}
		public long l
		{
			get
			{
				return this._l;
			}
			set
			{
				this._l = value;
			}
		}
		/// <summary>
		/// Arrays (and maps) may also have properties
		/// </summary>
		public IList<System.String> a
		{
			get
			{
				return this._a;
			}
			set
			{
				this._a = value;
			}
		}
		public string prop
		{
			get
			{
				return this._prop;
			}
			set
			{
				this._prop = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.name;
			case 1: return this.kind;
			case 2: return this.status;
			case 3: return this.hash;
			case 4: return this.nullableHash;
			case 5: return this.value;
			case 6: return this.average;
			case 7: return this.t;
			case 8: return this.l;
			case 9: return this.a;
			case 10: return this.prop;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.name = (System.String)fieldValue; break;
			case 1: this.kind = (org.apache.avro.test.Kind)fieldValue; break;
			case 2: this.status = (org.apache.avro.test.Status)fieldValue; break;
			case 3: this.hash = (org.apache.avro.test.MD5)fieldValue; break;
			case 4: this.nullableHash = (org.apache.avro.test.MD5)fieldValue; break;
			case 5: this.value = (System.Double)fieldValue; break;
			case 6: this.average = (System.Single)fieldValue; break;
			case 7: this.t = (System.Nullable<System.TimeSpan>)fieldValue; break;
			case 8: this.l = (System.Int64)fieldValue; break;
			case 9: this.a = (IList<System.String>)fieldValue; break;
			case 10: this.prop = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
